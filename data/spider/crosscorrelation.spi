; author: jochen ismer

;boxgroesse etc. aus dem ergebnis von box.spi auslesen
[usermap]='${map_name}'
[usermapb]='${box_map_name}'

[pass-band] = 0.15   ; Pass-band frequency
[stop-band] = 0.25   ; Stop-band frequency

UD IC 1,[bs],[obenlinks1],[obenlinks2],[obenlinks3],[obenlinks4],[ps], [rs]
${box_name}


;grenzwerte f√ºr Filter
[f1]=([ps]/[rs])-0.05
[f2]=([ps]/[rs])+0.05

;maske bestimmen testen!
;min max werte
FS [X4], [X5]
[usermapb]
;mitte des spektrums bestimmen
[x6]=(X4+X5)/2

;Maske erstellen noch zu testen
TH M
[usermapb]
mask
B
[x6]

;Groesse Usermap
FI [x8],[x9],[x10]
[usermap]
1,2,12
;anzahl der linker??
[nl]=${max_loops}

;delete existing crosscorrelation file
de
crosscorrelation

;Loops zu maps machen
DO  [y]=1,[nl]
 [filename]='${loop_dir}{***[y]}_bb.pdb' 
;Dichten aus PDB erstellen
 CP FROM PDB
 [filename]
 [ps]
 N
 A
 [x8] [x9] [x10]
 _1
 vm
 echo "PDB erstellt"


;ausschneiden
wi
_1
_2
[bs] [bs] [bs]
[obenlinks2] [obenlinks1] [obenlinks4]
VM
echo "window"

;rotierem
RT 3d
_2
_4
-90,180,0

;Map auf resolution filtern

 FQ
 _4
 _5
 7
 [f1] [f2]
 
 VM
 echo "Filter"
;cross correlation ausrechnen
 CC C [ccc]
 [usermapb]
 _5
 mask
 1
 
 ;cross correlation in ein file schreiben
 sd [y],[ccc]
 crosscorrelation
 
;zum loopmaps ausgeben:
;CP
;_5
;{***[y]}S
vm
echo "CC"



ENDDO
doc sort
crosscorrelation
ccsort
-1
N N
en
